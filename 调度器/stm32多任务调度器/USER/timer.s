; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--cpp --debug -c -S -o.\timer.s --depend=.\timer.d --cpu=Cortex-M3 --apcs=interwork -O0 -I..\h -ID:\Keil\ARM\RV31\INC -ID:\Keil\ARM\PACK\ARM\CMSIS\3.20.3\CMSIS\Include -ID:\Keil\ARM\PACK\Keil\STM32F1xx_DFP\1.0.2\Device\Include -D__MICROLIB -DSTM32F10X_MD -DSTM32F10X_MD --omf_browse=.\timer.crf ..\HARDWARE\TIMER\timer.cpp]
        THUMB
        REQUIRE8
        PRESERVE8

        AREA ||.text||, CODE, READONLY, ALIGN=2

IRQHandler PROC
        PUSH     {r4,lr}
        MOVS     r1,#1
        LDR      r0,|L0.636|
        BL       TIM_GetITStatus
        CMP      r0,#0
        BEQ      |L0.268|
        MOVS     r1,#1
        LDR      r0,|L0.636|
        BL       TIM_ClearITPendingBit
        LDR      r0,|L0.640|
        LDR      r0,[r0,#0]  ; Address_BASE
        LDR      r1,|L0.644|
        LDR      r4,[r0,#0]
        LDR      r1,[r1,#0]  ; task
        LDRB     r2,[r1,#0]
        LDR      r1,|L0.644|
        LDR      r1,[r1,#0]  ; task
        ADDS     r1,r1,#4
        ADD      r0,r1,r2,LSL #5
        STR      r4,[r0,#0]
        LDR      r0,|L0.640|
        LDR      r0,[r0,#0]  ; Address_BASE
        LDR      r1,|L0.644|
        LDR      r4,[r0,#4]
        LDR      r1,[r1,#0]  ; task
        LDRB     r2,[r1,#0]
        LDR      r1,|L0.644|
        LDR      r1,[r1,#0]  ; task
        ADDS     r1,r1,#4
        ADD      r1,r1,r2,LSL #5
        ADDS     r0,r1,#4
        STR      r4,[r0,#0]
        LDR      r0,|L0.640|
        LDR      r0,[r0,#0]  ; Address_BASE
        LDR      r1,|L0.644|
        LDR      r4,[r0,#8]
        LDR      r1,[r1,#0]  ; task
        LDRB     r2,[r1,#0]
        LDR      r1,|L0.644|
        LDR      r1,[r1,#0]  ; task
        ADDS     r1,r1,#4
        ADD      r1,r1,r2,LSL #5
        ADD      r0,r1,#8
        STR      r4,[r0,#0]
        LDR      r0,|L0.640|
        LDR      r0,[r0,#0]  ; Address_BASE
        LDR      r1,|L0.644|
        LDR      r4,[r0,#0xc]
        LDR      r1,[r1,#0]  ; task
        LDRB     r2,[r1,#0]
        LDR      r1,|L0.644|
        LDR      r1,[r1,#0]  ; task
        ADDS     r1,r1,#4
        ADD      r1,r1,r2,LSL #5
        ADD      r0,r1,#0xc
        STR      r4,[r0,#0]
        LDR      r0,|L0.640|
        LDR      r0,[r0,#0]  ; Address_BASE
        LDR      r1,|L0.644|
        LDR      r4,[r0,#0x10]
        LDR      r1,[r1,#0]  ; task
        LDRB     r2,[r1,#0]
        LDR      r1,|L0.644|
        LDR      r1,[r1,#0]  ; task
        ADDS     r1,r1,#4
        ADD      r1,r1,r2,LSL #5
        ADD      r0,r1,#0x10
        STR      r4,[r0,#0]
        LDR      r0,|L0.640|
        LDR      r0,[r0,#0]  ; Address_BASE
        LDR      r1,|L0.644|
        LDR      r4,[r0,#0x18]
        LDR      r1,[r1,#0]  ; task
        LDRB     r2,[r1,#0]
        LDR      r1,|L0.644|
        LDR      r1,[r1,#0]  ; task
        ADDS     r1,r1,#4
        ADD      r1,r1,r2,LSL #5
        ADD      r0,r1,#0x18
        STR      r4,[r0,#0]
        LDR      r0,|L0.640|
        LDR      r0,[r0,#0]  ; Address_BASE
        LDR      r1,|L0.644|
        LDR      r4,[r0,#0x1c]
        LDR      r1,[r1,#0]  ; task
        LDRB     r2,[r1,#0]
        LDR      r1,|L0.644|
        LDR      r1,[r1,#0]  ; task
        ADDS     r1,r1,#4
        ADD      r1,r1,r2,LSL #5
        ADD      r0,r1,#0x1c
        STR      r4,[r0,#0]
        LDR      r1,|L0.644|
        LDR      r1,[r1,#0]  ; task
        LDRB     r2,[r1,#1]
        LDR      r1,|L0.644|
        LDR      r1,[r1,#0]  ; task
        ADDS     r1,r1,#4
        ADD      r0,r1,r2,LSL #5
        LDR      r4,[r0,#0]
        LDR      r0,|L0.640|
        LDR      r0,[r0,#0]  ; Address_BASE
        LDR      r1,|L0.644|
        STR      r4,[r0,#0]
        LDR      r1,[r1,#0]  ; task
        LDRB     r2,[r1,#1]
        LDR      r1,|L0.644|
        LDR      r1,[r1,#0]  ; task
        ADDS     r1,r1,#4
        ADD      r1,r1,r2,LSL #5
        ADDS     r0,r1,#4
        LDR      r4,[r0,#0]
        LDR      r0,|L0.640|
        LDR      r0,[r0,#0]  ; Address_BASE
        LDR      r1,|L0.644|
        STR      r4,[r0,#4]
        LDR      r1,[r1,#0]  ; task
        B        |L0.270|
|L0.268|
        B        |L0.454|
|L0.270|
        LDRB     r2,[r1,#1]
        LDR      r1,|L0.644|
        LDR      r1,[r1,#0]  ; task
        ADDS     r1,r1,#4
        ADD      r1,r1,r2,LSL #5
        ADD      r0,r1,#8
        LDR      r4,[r0,#0]
        LDR      r0,|L0.640|
        LDR      r0,[r0,#0]  ; Address_BASE
        LDR      r1,|L0.644|
        STR      r4,[r0,#8]
        LDR      r1,[r1,#0]  ; task
        LDRB     r2,[r1,#1]
        LDR      r1,|L0.644|
        LDR      r1,[r1,#0]  ; task
        ADDS     r1,r1,#4
        ADD      r1,r1,r2,LSL #5
        ADD      r0,r1,#0xc
        LDR      r4,[r0,#0]
        LDR      r0,|L0.640|
        LDR      r0,[r0,#0]  ; Address_BASE
        LDR      r1,|L0.644|
        STR      r4,[r0,#0xc]
        LDR      r1,[r1,#0]  ; task
        LDRB     r2,[r1,#1]
        LDR      r1,|L0.644|
        LDR      r1,[r1,#0]  ; task
        ADDS     r1,r1,#4
        ADD      r1,r1,r2,LSL #5
        ADD      r0,r1,#0x10
        LDR      r4,[r0,#0]
        LDR      r0,|L0.640|
        LDR      r0,[r0,#0]  ; Address_BASE
        LDR      r1,|L0.644|
        STR      r4,[r0,#0x10]
        LDR      r1,[r1,#0]  ; task
        LDRB     r2,[r1,#1]
        LDR      r1,|L0.644|
        LDR      r1,[r1,#0]  ; task
        ADDS     r1,r1,#4
        ADD      r1,r1,r2,LSL #5
        ADD      r0,r1,#0x18
        LDR      r4,[r0,#0]
        LDR      r0,|L0.640|
        LDR      r0,[r0,#0]  ; Address_BASE
        LDR      r1,|L0.644|
        STR      r4,[r0,#0x18]
        LDR      r1,[r1,#0]  ; task
        LDRB     r2,[r1,#1]
        LDR      r1,|L0.644|
        LDR      r1,[r1,#0]  ; task
        ADDS     r1,r1,#4
        ADD      r1,r1,r2,LSL #5
        ADD      r0,r1,#0x1c
        LDR      r4,[r0,#0]
        LDR      r0,|L0.640|
        LDR      r0,[r0,#0]  ; Address_BASE
        STR      r4,[r0,#0x1c]
        LDR      r1,|L0.644|
        LDR      r0,[r1,#0]  ; task
        LDRB     r1,[r0,#0]
        ADDS     r1,r1,#1
        CMP      r1,#2
        BGE      |L0.426|
        LDRB     r1,[r0,#0]
        ADDS     r1,r1,#1
        STRB     r1,[r0,#0]
        B        |L0.430|
|L0.426|
        MOVS     r1,#0
        STRB     r1,[r0,#0]
|L0.430|
        LDRB     r1,[r0,#1]
        ADDS     r1,r1,#1
        CMP      r1,#2
        BGE      |L0.446|
        LDRB     r1,[r0,#1]
        ADDS     r1,r1,#1
        STRB     r1,[r0,#1]
        B        |L0.450|
|L0.446|
        MOVS     r1,#0
        STRB     r1,[r0,#1]
|L0.450|
        NOP      
        NOP      
|L0.454|
        POP      {r4,pc}
        ENDP

TIM3_IRQHandler PROC
        PUSH     {r4,lr}
        MRS      r4,MSP
        MOV      r0,r4
        ADD      r0,r0,#8
        MOV      r4,r0
        LDR      r0,|L0.640|
        STR      r4,[r0,#0]
        BL       IRQHandler
        POP      {r4,pc}
        ENDP

Timerx_Init PROC
        PUSH     {r0-r6,lr}
        MOV      r4,r0
        MOV      r5,r1
        MOVS     r1,#1
        MOVS     r0,#2
        BL       RCC_APB1PeriphClockCmd
        STRH     r4,[sp,#8]
        STRH     r5,[sp,#4]
        MOVS     r0,#0
        STRH     r0,[sp,#0xa]
        STRH     r0,[sp,#6]
        ADD      r1,sp,#4
        LDR      r0,|L0.636|
        BL       TIM_TimeBaseInit
        MOVS     r1,#1
        LDR      r0,|L0.636|
        BL       TIM_GetITStatus
        CBZ      r0,|L0.538|
        MOVS     r1,#1
        LDR      r0,|L0.636|
        BL       TIM_ClearITPendingBit
|L0.538|
        MOVS     r2,#1
        MOVS     r1,#0x41
        LDR      r0,|L0.636|
        BL       TIM_ITConfig
        MOVS     r0,#1
        LDR      r1,|L0.636|
        ADDS     r1,r1,#0x24
        STRH     r0,[r1,#0]
        MOVS     r0,#0x1d
        STRB     r0,[sp,#0]
        MOVS     r0,#0
        STRB     r0,[sp,#1]
        MOVS     r0,#3
        STRB     r0,[sp,#2]
        MOVS     r0,#1
        STRB     r0,[sp,#3]
        B        |L0.590|
|L0.582|
        MOVS     r1,#1
        LDR      r0,|L0.636|
        BL       TIM_ClearITPendingBit
|L0.590|
        MOVS     r1,#1
        LDR      r0,|L0.636|
        BL       TIM_GetITStatus
        CMP      r0,#0
        BNE      |L0.582|
        MOVS     r1,#1
        LDR      r0,|L0.636|
        BL       TIM_GetITStatus
        CBZ      r0,|L0.620|
        MOVS     r1,#1
        LDR      r0,|L0.636|
        BL       TIM_ClearITPendingBit
|L0.620|
        MOV      r0,sp
        BL       NVIC_Init
        MOVS     r1,#1
        LDR      r0,|L0.636|
        BL       TIM_Cmd
        POP      {r0-r6,pc}
        ENDP

|L0.636|
        DCD      0x40000400
|L0.640|
        DCD      Address_BASE
|L0.644|
        DCD      task

        AREA ||.ARM.exidx||, LINKORDER=||.text||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

        DCD      0x00000000
        RELOC 42, ||.text||
        DCD      0x00000001

        AREA ||.arm_vfe_header||, DATA, READONLY, NOALLOC, ALIGN=2

        DCD      0x00000000

        AREA ||.data||, DATA, ALIGN=2

Address_BASE
        DCD      0x00000000
task
        DCD      0x00000000

        EXPORT IRQHandler [CODE]
        EXPORT TIM3_IRQHandler [CODE]
        EXPORT Timerx_Init [CODE]
        EXPORT Address_BASE [DATA,SIZE=4]
        EXPORT task [DATA,SIZE=4]

        IMPORT ||Lib$$Request$$armlib|| [CODE,WEAK]
        IMPORT ||Lib$$Request$$cpplib|| [CODE,WEAK]
        IMPORT TIM_GetITStatus [CODE]
        IMPORT TIM_ClearITPendingBit [CODE]
        IMPORT RCC_APB1PeriphClockCmd [CODE]
        IMPORT TIM_TimeBaseInit [CODE]
        IMPORT TIM_ITConfig [CODE]
        IMPORT NVIC_Init [CODE]
        IMPORT TIM_Cmd [CODE]

        ATTR FILESCOPE
        ATTR SETVALUE Tag_ABI_PCS_wchar_t,2
        ATTR SETVALUE Tag_ABI_enum_size,1
        ATTR SETVALUE Tag_ABI_optimization_goals,6
        ATTR SETSTRING Tag_conformance,"2.06"
        ATTR SETVALUE AV,6,0
        ATTR SETVALUE AV,18,1

        ASSERT {ENDIAN} = "little"
        ASSERT {INTER} = {TRUE}
        ASSERT {ROPI} = {FALSE}
        ASSERT {RWPI} = {FALSE}
        ASSERT {IEEE_FULL} = {FALSE}
        ASSERT {IEEE_PART} = {FALSE}
        ASSERT {IEEE_JAVA} = {FALSE}
        END
